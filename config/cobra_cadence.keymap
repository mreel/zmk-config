/*
 * Copyright (c) 2025 Tibo Loete
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define L_DEF 0
#define L_NUM 1
#define L_SYM 2
#define num_tab &lt L_NUM TAB

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick-tap-ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer { // Layer 0
            bindings = <
                &esc                                                                                                                    &kp C_PLAY_PAUSE
                &kp Q       &kp W       &kp D       &kp F       &kp G                   &kp Y       &kp U       &kp R       &kp L       &kp P
                &kp A       &kp S       &kp E       &kp T                                           &kp N       &kp I       &kp O       &kp H
                &kp Z       &kp X       &kp C       &kp V       &kp B                   &kp M       &kp J       &kp K       &kp DOT     &kp COMMA
                                        &num_tab    &kp SPACE   &kp TAB                 &kp BSPC    &kp ENTER   &kp DEL
            >;
        };

        number_layer {
            bindings = <
                &trans                                                                                                                  &bootloader
                &trans      &trans      &trans      &trans      &trans                  &trans      &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans                                          &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans      &trans                  &trans      &trans      &trans      &trans      &trans
                                        &trans      &trans      &trans                  &trans      &trans      &trans
            >;
        };

        symbol_layer {
            bindings = <
                &trans                                                                                                              &trans
                &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans                                      &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans
                                        &trans      &trans      &trans              &trans      &trans      &trans
            >;
        }
    };
 };
