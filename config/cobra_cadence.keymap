/*
 * Copyright (c) 2025 Tibo Loete
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// layers
#define LAYER_BASE 0
#define LAYER_NAV 1
#define LAYER_MOUSE 2
#define LAYER_MEDIA 3
#define LAYER_NUM 4
#define LAYER_SYM 5
#define LAYER_FUNCTION 6

// shorter keycodes
#define ______ &trans
#define kp_undo &kp LG(Z)
#define kp_redo &kp LS(LG(Z))
#define kp_copy &kp LG(C)
#define kp_paste &kp LG(V)
#define kp_cut &kp LG(X)
#define kp_wrd_lft &kp LA(LEFT)
#define kp_wrd_rgt &kp LA(RIGHT)
#define mouse_left &mmv MOVE_LEFT
#define mouse_down &mmv MOVE_DOWN
#define mouse_up &mmv MOVE_UP
#define mouse_right &mmv MOVE_RIGHT
#define scroll_left &msc SCRL_LEFT
#define scroll_down &msc SCRL_DOWN
#define scroll_up &msc SCRL_UP
#define scroll_right &msc SCRL_RIGHT

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick-tap-ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {                 // 0
            bindings = <
                &kp ESC                                                                                                                    &kp C_PLAY_PAUSE
                &kp Q       &kp W       &kp D       &kp F       &kp G                   &kp Y       &kp U       &kp R       &kp L       &kp P
                &kp A       &kp S       &kp E       &kp T           /*G*/             /*Y*/         &kp N       &kp I       &kp O       &kp H
                &kp Z       &kp X       &kp C       &kp V       &kp B                   &kp M       &kp J       &kp K       &kp DOT     &kp COMMA
                                        &kp ESC     &kp SPACE   &kp TAB                 &kp BSPC    &kp ENTER   &kp DEL
            >;
        };

        navigation_layer {              // 1
            bindings = <
                &bootloader                                                                                                             &bootloader
                ______      ______      ______      ______      ______                  kp_redo     kp_paste    kp_copy     kp_cut      kp_undo
                &kp LCTRL   &kp LALT    &kp LCMD    &kp LSHFT       /* */       /*cps_lck*/         &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT
                ______      ______      ______      ______      ______                  &kp INS     &kp HOME    kp_wrd_lft  kp_wrd_rgt  &kp END
                                        ______      ______      ______                  ______      ______      ______
            >;
        };

        mouse_layer {                   // 2
            bindings = <
                ______                                                                                                                  ______
                ______      ______      ______      ______      ______                  kp_redo     kp_paste    kp_copy     kp_cut      kp_undo
                &kp LCTRL   &kp LALT    &kp LCMD    &kp LSHFT       /* */             /* */         mouse_left  mouse_down  mouse_up    mouse_right
                ______      ______      ______      ______      ______                  ______      scroll_left scroll_down scroll_up   scroll_right
                                        ______      ______      ______                  &mkp RCLK   &mkp LCLK   &mkp MCLK
            >;
        };
    };
 };
